{templateType e2221\NetteGrid\NetteGridTemplate}

{snippetArea documentArea}

    {* import templates blocks *}
    {import default.blocks.latte}
    {foreach $templates as $templateKey => $template}
        {import $template}
    {/foreach}

    {snippet gridContent}
        {$wholeDocumentTemplate->renderStartTag()|noescape}

                {form form}

                    {* <table> *}
                    {include #table-open-tag}

                        <thead n:snippet="head" {$theadTemplate->getAttributes()|noescape}>

                            {if $hasGlobalAction === true || $hasMultipleFilter === true}

                                <tr>
                                    <th colspan="{$tableColspan}">
                                        <div class="row">

                                            {* Global actions *}
                                            <div class="col col-sm-6 form-inline" n:if="$hasGlobalAction === true">
                                                <div class="form-inline">
                                                    <label class="my-1 mr-2">Selected rows:</label>
                                                    <select class="form-control form-control-sm" data-change-global-action>
                                                        <option>...select...</option>
                                                        <option n:foreach="$globalActions as $globalActionName => $globalAction"
                                                                value="{$globalActionName}"
                                                                data-link="{link selectGlobalAction! $globalActionName}">
                                                            {$globalAction->getLabel()}
                                                        </option>
                                                    </select>
                                                    <div data-global-action-container n:snippet="global-action-container">
                                                        {ifset $selectedGlobalAction}
                                                            {formContainer $globalActionContainerName}
                                                                {foreach $globalActionContainer->getControls() as $inputControl}
                                                                    {continueIf $inputControl instanceof Nette\Forms\Controls\SubmitButton}
                                                                    {if $inputControl instanceof Nette\Forms\Controls\TextInput || $inputControl instanceof Nette\Forms\Controls\SelectBox}
                                                                        {input $inputControl class => 'form-control form-control-sm'}
                                                                    {else}
                                                                        {input $inputControl}
                                                                    {/if}
                                                                {/foreach}
                                                                {foreach $globalActionContainer->getComponents(false, 'Nette\Forms\Controls\SubmitButton') as $submitControl}
                                                                    {input $submitControl class => 'btn btn-sm btn-outline-primary'}
                                                                {/foreach}
                                                            {/formContainer}
                                                        {/ifset}
                                                    </div>
                                                </div>
                                                <script type="application/javascript">
                                                    (window._stack = window._stack || []).push(function(di) {
                                                        di.getService('page').getSnippet({snippet.id head})
                                                            .setup(function(head){
                                                                $(head).on('change', '[data-change-global-action]', function(){
                                                                    let selectedOption = this.selectedIndex;
                                                                    let containerContent = $(head).find('[data-global-action-container]');
                                                                    containerContent.contents().remove();
                                                                    if(selectedOption && selectedOption > 0)
                                                                    {
                                                                        let link = this.options.item(selectedOption).dataset.link;
                                                                        di.getService('page').open(link, 'POST')
                                                                    }
                                                                });
                                                            });
                                                    });
                                                </script>
                                            </div>

                                            {* Multiple filter *}
                                            <div class="col col-sm-6" n:if="$hasMultipleFilter === true">
                                                <div class="input-group float-right">
                                                    {formContainer multipleFilter}
                                                        {foreach $multipleFilters as $multipleFitlerName => $multipleFilter}
                                                            {formContainer $multipleFitlerName}
                                                                {foreach $multipleFilter->getContainer()->getControls() as $multipleFilterControl}
                                                                    {if $multipleFilterControl instanceof Nette\Forms\Controls\TextInput || $multipleFilterControl instanceof Nette\Forms\Controls\SelectBox}
                                                                        {input $multipleFilterControl class => 'form-control form-control-sm'}
                                                                    {else}
                                                                        {input $multipleFilterControl}
                                                                    {/if}
                                                                {/foreach}
                                                            {/formContainer}
                                                        {/foreach}
                                                    {/formContainer}
                                                </div>
                                            </div>
                                        </div>

                                    </th>
                                </tr>

                            {/if}

                            {* <thead> *}
                            {if $hiddenHeader === false}

                                <tr n:snippet="headTitles">

                                    {if $hasGlobalAction === true}

                                        <th>
                                            <input type="checkbox" title="Select all" data-select-all>
                                        </th>

                                    {/if}

                                    {* columns cols <td>Column title</td> *}
                                    {foreach $columns as $columnName => $column}
                                        {ifset #title-col-$columnName}
                                            {include #"title-col-{$columnName}"}
                                        {else}
                                            {include #title-col-open-tag column => $column, columnName => $columnName}

                                                {if $column->isSortable() === true}
                                                    {var string $direction='ASC'}
                                                    {if $columnName == $sortByColumn}
                                                        {if $sortDirection == 'ASC'}
                                                            {php $direction = 'DESC'}
                                                        {elseif $sortDirection == 'DESC'}
                                                            {php $direction = ''}
                                                        {/if}
                                                    {/if}
                                                    <a n:href="sortColumn! $columnName, $direction">
                                                {/if}

                                                {include #column-title column => $column, columnName => $columnName, columnTitle => $column->getLabel()}

                                                {if $column->isSortable() === true && $columnName == $sortByColumn}
                                                    </a>
                                                    {if $sortDirection == 'ASC'}
                                                        <span><em>&#9650;</em></span>
                                                    {elseif $sortDirection == 'DESC'}
                                                        <span><em>&#9660;</em></span>
                                                    {/if}
                                                {/if}

                                            {include #title-col-end-tag column => $column, columnName => $columnName}
                                        {/ifset}
                                    {/foreach}

                                    {* header actions *}
                                    {if $hasActionsColumn === true}
                                        {include #head-actions-column-open-tag}
                                            {foreach $headerActions as $headerActionName => $headerAction}
                                                {ifset #header-action-$headerActionName}
                                                    {include #"header-action-{$headerActionName}"}
                                                {else}
                                                    {include #header-action headerAction => $headerAction}
                                                {/ifset}
                                            {/foreach}
                                        {include #head-actions-column-end-tag}
                                    {/if}

                                </tr>

                                {* head filter *}
                                {if $isFilterable === true}
                                    {include #head-filter-row-open-tag}

                                        {if $hasGlobalAction === true}
                                            <th>
                                            </th>
                                        {/if}

                                        {formContainer filter}
                                            {foreach $columns as $columnName => $column}
                                                {include head-filter-col-open-tag columnName => $columnName, headFilterColTemplate => $column->getHeadFilterColTemplate()}
                                                {if $column->isFilterable()}
                                                    {ifset #filter-input-$columnName}
                                                        {include #"filter-input-{$columnName}"}
                                                    {else}
                                                        {include #filter-input columnName => $columnName}
                                                    {/ifset}
                                                {/if}
                                                {include head-filter-col-end-tag columnName => $columnName, headFilterColTemplate => $column->getHeadFilterColTemplate()}
                                            {/foreach}
                                        {/formContainer}
                                        <th n:if="$hasActionsColumn"></th>
                                    {include #head-filter-row-end-tag}
                                {/if}

                            {/if}
                        </thead>

                        <tbody n:snippet="data" {$tbodyTemplate->getAttributes()|noescape}>
                            {snippetArea dataItems}

                                {* Empty data *}
                                {if $showEmptyResult === true}

                                    {* <tr> *}
                                    {include #emptyData-row-open-tag}

                                        {* <td> </td> *}
                                        {include #emptyData}

                                    {* </tr> *}
                                    {include #emptyData-row-end-tag}

                                {else}

                                    {* Inline add *}
                                    {if $isAddable === true && $inlineAdd === true}
                                        <tr {$emptyDataRowTemplate->getAttributes()|noescape}>

                                            {if $hasGlobalAction === true}
                                                <th>
                                                </th>
                                            {/if}

                                            {formContainer add}

                                                {foreach $columns as $columnName => $column}
                                                    <td>
                                                        {if $column->isAddable() === true}
                                                            {input $columnName}
                                                        {/if}
                                                    </td>
                                                {/foreach}

                                                <td>
                                                    {$documentTemplate->getRowActionInlineAddSave()->render()}
                                                    {$documentTemplate->getRowActionInlineAddCancel()->render()}
                                                </td>

                                            {/formContainer}
                                        </tr>
                                    {/if}

                                    {foreach $data as $dataKey => $row}
                                        {var e2221\NetteGrid\Document\Templates\DataRowTemplate $dataRowTemplate = $documentTemplate->getDataRowTemplateForRendering($row)}
                                        {var string|int $primaryValue = $control->getRowPrimaryValue($row)}
                                        {php
                                            $dataRowTemplate->prepareElement($row, $primaryValue);
                                        }

                                        {* <tr> *}
                                        <tr n:snippet="data-$primaryValue" {$dataRowTemplate->getAttributes()|noescape}>
                                        {*include #data-row-open-tag row => $row, dataRowTemplate => $dataRowTemplate*}

                                            {if $hasGlobalAction === true}
                                                <td>
                                                    {formContainer globalActions}
                                                        {input rowCheck:$primaryValue}
                                                    {/formContainer}
                                                </td>
                                            {/if}

                                            {* columns *}
                                            {foreach $columns as $columnName => $column}

                                                {var e2221\NetteGrid\Document\Templates\Cols\DataColTemplate $dataColTemplate = $column->getDataColTemplateForRendering($row, $primaryValue)}
                                                {var $cell = $column->getCellValueForRendering($row)}

                                                {* <td> *}
                                                {include #data-col-open-tag dataColTemplate => $dataColTemplate, row => $row, cell => $cell, primary => $primaryValue, columnName => $columnName}

                                                    {if $dataColTemplate->isHidden() === false}

                                                        {* edit - print input *}
                                                        {if $editMode === true && $column->isEditable() === true && $editRowKey == $primaryValue}
                                                            {var $editValue = $column->getEditCellValue($row, $cell)}

                                                                {formContainer edit}

                                                                    {ifset #data-edit-$columnName}
                                                                        {include #"data-edit-{$columnName}"}
                                                                    {else}
                                                                        {include #data-edit row => $row, editValue => $editValue, primary => $primaryValue, columnName => $columnName}
                                                                    {/ifset}

                                                                {/formContainer}

                                                        {* print cell value *}
                                                        {else}

                                                            {* ifset block with name #data-columnName replace it *}
                                                            {ifset #data-$columnName}
                                                                {include #"data-{$columnName}"}
                                                            {else}
                                                                {include #data-cell row => $row, cell => $cell, primary => $primaryValue}
                                                            {/ifset}

                                                        {/if}

                                                    {/if}

                                                {* </td> *}
                                                {include #data-col-end-tag dataColTemplate => $dataColTemplate}

                                            {/foreach}

                                            {if $hasActionsColumn === true}

                                                {* <td> *}
                                                {include #data-actions-column-open-tag}

                                                    {if $editMode === true && $editRowKey == $primaryValue}

                                                        {* primary hidden input *}
                                                        {formContainer edit}
                                                            {input $primaryColumn value => $primaryValue}
                                                        {/formContainer}

                                                        {* save button *}
                                                        {include #data-action-save row => $row, primary => $primaryValue}

                                                        {* cancel button *}
                                                        {include #data-action-cancel row => $row, primary => $primaryValue}

                                                    {elseif count($rowActions) > 0}

                                                        {foreach $rowActionsOrder as $index => $action}

                                                            {ifset #data-action-$action}
                                                                {include #"data-action-{$action}" row => $row, primary => $primaryValue}
                                                            {else}
                                                                {include #data-action action => $rowActions[$action], row => $row, primary => $primaryValue}
                                                            {/ifset}

                                                        {/foreach}

                                                    {/if}

                                                {* </td> *}
                                                {include #data-actions-column-end-tag}

                                            {/if}

                                        </tr>

                                        {* Item details *}
                                        {if $hasItemDetail === true}

                                            {foreach $itemDetails as $itemDetailName => $itemDetail}

                                                <tr class="row-stripped-helper" data-no-select></tr>

                                                <tr data-no-select data-action-id="{$itemDetailName}" data-detail-id="{$primaryValue}" n:snippet="itemDetail-$itemDetailName-$primaryValue">
                                                    <td data-no-select n:class="$itemDetailKey == $primaryValue ? 'loaded' : 'd-none'" colspan="{$tableColspan}">
                                                        {if $itemDetailKey == $primaryValue}

                                                            {ifset #item-detail-$itemDetailName}
                                                                {include #"item-detail-{$itemDetailName}" row => $row, primary => $primaryValue, itemDetail => $itemDetail}
                                                            {else}
                                                                {include #item-detail row => $row, primary => $primaryValue, itemDetail => $itemDetail}
                                                            {/ifset}
                                                        {/if}
                                                    </td>
                                                </tr>

                                            {/foreach}

                                            {/if}

                                    {/foreach}

                                {/if}

                            {/snippetArea}
                        </tbody>


                        <tfoot n:snippet="footer" {$tfootTemplate->getAttributes()|noescape}>

                            {snippetArea footerArea}

                                {* <td colspan=x> *}
                                {include #tfoot-content-open-tag}
                                <div class="row">
                                    <div class="col col-sm-4">

                                    </div>
                                    <div class="col col-sm-4">
                                        {if $paginator instanceof Nette\Utils\Paginator && $paginator->pageCount > 0}
                                            {include #pagination}
                                        {/if}
                                    </div>
                                    <div class="col col-sm-4">
                                        <div class="input-group float-right{if $showResetFilterButton === false} col-7{/if}">
                                            <a class="btn btn-sm btn-danger" n:if="$showResetFilterButton" n:href="resetFilter!">Reset filter</a>
                                            {if $paginator instanceof Nette\Utils\Paginator && $paginator->pageCount > 0}
                                                {formContainer paginate}
                                                    {input itemsPerPage}
                                                {/formContainer}
                                                {input paginateSubmit}
                                            {/if}
                                        </div>
                                    </div>
                                </div>
                                {include #tfoot-content-end-tag}

                            {/snippetArea}

                        </tfoot>


                    {* </table> *}
                    {include #table-close-tag}

                    {if $isFilterable}
                        {input filterSubmit}
                    {/if}
                    {if $hasMultipleFilter}
                        {input multipleFilterSubmit}
                    {/if}
                {/form}

        {$wholeDocumentTemplate->renderEndTag()|noescape}

        <script type="application/javascript">
            (window._stack = window._stack || []).push(function(di) {

                {* atosubmit filter form *}
                var tmr = null;
                di.getService('page').getSnippet({form.id form})
                    .setup(function(frm) {
                        $(frm).on('keyup', 'input[data-autosubmit]', function(e) {
                            var code;
                            code = e.which || e.keyCode || 0;
                            if ((code !== 13) && ((code >= 9 && code <= 40) || (code >= 112 && code <= 123))) {
                                return;
                            }
                            var $this = $(this);
                            tmr && window.clearTimeout(tmr);
                            tmr = window.setTimeout(function(_this) {
                                di.getService('formLocator').getForm(frm).submit($this.data('container'));
                            }(this), 200);
                        });

                        $(frm).on('change', '[data-autosubmit]', function(e) {
                            var code;
                            code = e.which || e.keyCode || 0;
                            if ((code !== 13) && ((code >= 9 && code <= 40) || (code >= 112 && code <= 123))) {
                                return;
                            }
                            var $this = $(this);
                            tmr && window.clearTimeout(tmr);
                            tmr = window.setTimeout(function(_this) {
                                di.getService('formLocator').getForm(frm).submit($this.data('container'));
                            }(this), 200);
                        });

                        $(frm).on('click', '[data-submit]', function(){
                            di.getService('formLocator').getForm(frm).submit($(this).data('container'));
                        });

                        $(frm).on('change', 'select[data-paginate-submit]', function(){
                            di.getService('formLocator').getForm(frm).submit($(this).data('container'));
                        });
                    })
                    .teardown(function() {
                        tmr && window.clearTimeout(tmr);
                        tmr = null;
                    });


                {* check all selectors after clicking check all *}
                di.getService('page').getSnippet({snippet.id gridContent})
                    .setup(function(gridContent){
                        $(gridContent).on('change', 'input[data-select-all]', function(){
                            let selectors = $(gridContent).find('input[data-row-selector]');
                            if(this.checked){
                                selectors.each(function(){
                                    $(this).prop("checked", true);
                                    let tr = this.closest('tr[data-selectable-row]');
                                    if(tr) {
                                        let tbody = $(this).closest('tbody');
                                        tr.classList.add("ui-selecting");
                                        try{
                                            tbody.data("ui-selectable")._mouseStop(null);
                                        }catch (e) {
                                            console.log(e);
                                        }
                                    }
                                });
                            }else{
                                selectors.each(function(){
                                    $(this).prop("checked", false);
                                    let tr = this.closest('tr[data-selectable-row]');
                                    if(tr) {
                                        let tbody = $(this).closest('tbody');
                                        tr.classList.remove("ui-selected");
                                        tr.classList.remove("table-success");
                                        try{
                                            tbody.data("ui-selectable")._mouseStop(null);
                                        }catch (e) {
                                            console.log(e);
                                        }
                                    }
                                });
                            }
                        })
                    });

                {* make rows selectable *}
                di.getService('page').getSnippet({snippet.id data})
                    .setup(function(tbody) {
                        if (typeof $.fn.selectable === 'undefined') {
                            return;
                        }
                        $(tbody).on('change','[data-row-selector]', function(){
                            let tr = this.closest('tr[data-selectable-row]');
                            if(tr)
                            {
                                let tbody = $(this).closest('tbody');
                                if(this.checked){
                                    tr.classList.add("ui-selecting");
                                    tbody.data("ui-selectable")._mouseStop(null);
                                } else {
                                    tr.classList.remove("ui-selected");
                                    tr.classList.remove("table-success");
                                    tbody.data("ui-selectable")._mouseStop(null);
                                }
                            }
                        });

                        if($(tbody).data('sortable-rows')) {
                            $(tbody).selectable({
                                filter: 'tr',
                                cancel: 'a,.btn,input,[data-editable-link],[data-no-select]',
                                classes: {
                                    "ui-selecting": "table-info",
                                    "ui-selected": "table-success"
                                },
                                stop: function () {
                                    $(".ui-selected", this).find("input:checkbox:first").each(function () {
                                        $(this).prop("checked", true);
                                    });
                                },
                                unselected: function (event, ui) {
                                    $(ui.unselected, this).find("input:checkbox:first").each(function () {
                                        $(this).prop("checked", false);
                                    });
                                }
                            });
                        }
                    });

                {* make rows draggable *}
                di.getService('page').getSnippet({snippet.id data})
                    .setup(function(allRows) {
                        if (typeof $.fn.draggable  === 'undefined') {
                            return;
                        }
                        $(allRows).find('tr[data-draggable-row]').draggable({
                            handle: 'a[data-drag-handler]',
                            scope: {$draggableScope},
                            revert: 'invalid',
                            zIndex: 20000,
                            helper: function(e, ui){
                                let helper, helperText;
                                helper=$(this);
                                helperText = helper.data('helper-text');
                                if(helperText)
                                {
                                    return $("<div class='ui-widget-header'>"+helperText+"</div>");
                                }else{
                                    return $(this).clone();
                                }
                            },
                            opacity: 0.8,
                            cursor: "move",
                            cursorAt: { top: 0, left: 0 },
                        });
                    });


                {* make rows sortable *}
                var row, actionKey, movedKey, beforeKey, afterKey, postFields, handler, senderId;
                di.getService('page').getSnippet({snippet.id data})
                    .setup(function(allRows) {
                        if (typeof $.fn.sortable === 'undefined') {
                            return;
                        }
                        $(allRows).on('mousedown', 'a[data-sort-handler]', function(){
                            handler = $(this);
                        });

                        if($(allRows).data('sortable-rows'))
                        {
                            $(allRows).sortable({
                                handle: 'a[data-sort-handler]',
                                items: 'tr',
                                placeholder: "table-info",
                                {ifset $sortableScope}
                                    connectWith: '[data-sortable-scope={$sortableScope}]',
                                {/ifset}
                                update: function(event, ui){
                                    row = ui.item.closest('tr[data-id]');
                                    actionKey = $(handler).data('action-id');
                                    movedKey = $(row).data('id');
                                    if (row.prevAll("[data-sortable-row]").first().length) {
                                        beforeKey = row.prevAll("[data-sortable-row]").first().data('id');
                                    }
                                    if (row.nextAll("[data-sortable-row]").first().length) {
                                        afterKey = row.nextAll("[data-sortable-row]").first().data('id');
                                        if(afterKey === beforeKey)
                                            beforeKey = null;
                                    }
                                    if(ui.sender) {
                                        senderId = ui.sender.data('sortable-sender-id');
                                    }
                                    postFields = {
                                        ['actionKey']: actionKey,
                                        ['movedKey']: movedKey,
                                        ['beforeKey']: beforeKey,
                                        ['afterKey']: afterKey,
                                        ['senderId']: senderId,
                                    };
                                    di.getService('page').open({link rowsSort!}, 'POST', postFields);
                                },
                                helper: function(e, ui) {
                                    ui.children().each(function() {
                                        return $(this).width($(this).width());
                                    });
                                    return ui;
                                }
                            });
                        }
                    })
                    .teardown(function () {
                        row = actionKey = movedKey = beforeKey = afterKey = postFields = handler = senderId = null;
                    });

                {* item detail toggle *}
                var btn, id, link, detailRow, itemDetailTd, actionId;
                di.getService('page').getSnippet({snippet.id data})
                    .setup(function (rows) {
                        $(rows).on('click', 'a[data-item-detail-toggle]', function () {
                            btn = $(this);
                            id = btn.data('id')
                            link = btn.data('link');
                            actionId = btn.data('action-id');
                            detailRow = $(rows).find('tr[data-detail-id="'+id+'"][data-action-id="'+actionId+'"]');
                            itemDetailTd = $(detailRow).find('td');

                            //hide and return if showed
                            if ($(itemDetailTd).hasClass('showed')) {
                                $(itemDetailTd).slideToggle('fast');
                                $(itemDetailTd).removeClass('showed');
                                return;
                            }
                            //show and return if loaded
                            if ($(itemDetailTd).hasClass('loaded')) {
                                $(itemDetailTd).slideToggle('fast');
                                $(itemDetailTd).addClass('showed');
                                return;
                            }
                            //open link if content is not loaded
                            di.getService('page')
                                .open(link)
                                .then(function () {
                                    $(itemDetailTd).slideToggle('fast');
                                });
                        });
                    })
                    .teardown(function () {
                        btn = id = link = detailRow = itemDetailTd = actionId = null;
                    });

                {* rows editable *}
                di.getService('page').getSnippet({snippet.id data})
                    .setup(function(col) {
                        $(col).on('dblclick', 'td[data-column-editable]', function() {
                            var input, cell, editableLink, editValue, columnName, editInputTag;
                            cell = $(this);
                            editableLink = $(this).data('editable-link');
                            editValue = $(this).data('edit-value');
                            columnName = $(this).data('column-editable');
                            editInputTag = $(this).data('edit-input');

                            //support for textarea
                            if(editInputTag === 'textarea')
                            {
                                input = $('<textarea class="form-control">' + editValue + '</textarea>');
                                let cell_padding = parseInt(cell.css('padding').replace(/[^-\d\.]/g, ''), 10);
                                let cell_height = cell.outerHeight();
                                let line_height = Math.round(parseFloat(cell.css('line-height')));
                                let cell_lines = (cell_height - (2 * cell_padding)) / line_height;
                                input.attr('rows', Math.round(cell_lines));
                            }
                            if(typeof input == "undefined" || input == null)
                            {
                                console.log('Usupported input type. ['+editInputTag+']');
                                return;
                            }
                            input.on('blur', function(){
                                let newValue = $(this).val();
                                if(newValue !== editValue)
                                {
                                    di.getService("ajax")
                                        .post(editableLink, { value: newValue, columnName: columnName })
                                        .then(
                                            function(payload){
                                                newValue = payload.getPayload()._netteGrid_editColumn_newValue;
                                                console.log(newValue);
                                                cell.html(newValue);
                                                return cell.addClass('inline-edited');
                                            },
                                            function(err){
                                                console.log(err);
                                            }
                                        );
                                }else{
                                    cell.html(editValue);
                                }
                            })
                            cell.html(input);
                            input.focus();
                        });
                    })
                    .teardown(function() {
                    });
            });
        </script>

    {/snippet}
{/snippetArea}